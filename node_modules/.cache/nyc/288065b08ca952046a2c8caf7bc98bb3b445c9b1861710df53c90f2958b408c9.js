var cov_ir7g56url=function(){var path="/home/lenovo/nodefiles2/FHIR-Converter-master/src/routes.js";var hash="3215cdd7d218ce68fd4fc28579a5c0fd3340a3f6";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/home/lenovo/nodefiles2/FHIR-Converter-master/src/routes.js",statementMap:{"0":{start:{line:6,column:17},end:{line:6,column:59}},"1":{start:{line:7,column:16},end:{line:7,column:52}},"2":{start:{line:8,column:14},end:{line:8,column:32}},"3":{start:{line:9,column:19},end:{line:9,column:43}},"4":{start:{line:10,column:17},end:{line:10,column:56}},"5":{start:{line:11,column:19},end:{line:11,column:60}},"6":{start:{line:12,column:9},end:{line:12,column:22}},"7":{start:{line:13,column:10},end:{line:13,column:29}},"8":{start:{line:14,column:10},end:{line:14,column:91}},"9":{start:{line:15,column:11},end:{line:15,column:26}},"10":{start:{line:16,column:17},end:{line:16,column:39}},"11":{start:{line:17,column:16},end:{line:17,column:45}},"12":{start:{line:18,column:19},end:{line:18,column:43}},"13":{start:{line:19,column:17},end:{line:19,column:52}},"14":{start:{line:20,column:22},end:{line:20,column:52}},"15":{start:{line:21,column:24},end:{line:21,column:89}},"16":{start:{line:22,column:10},end:{line:22,column:28}},"17":{start:{line:24,column:0},end:{line:786,column:2}},"18":{start:{line:25,column:23},end:{line:25,column:97}},"19":{start:{line:26,column:24},end:{line:26,column:78}},"20":{start:{line:27,column:4},end:{line:27,column:25}},"21":{start:{line:28,column:23},end:{line:28,column:74}},"22":{start:{line:29,column:4},end:{line:29,column:24}},"23":{start:{line:30,column:4},end:{line:30,column:64}},"24":{start:{line:31,column:4},end:{line:31,column:64}},"25":{start:{line:32,column:4},end:{line:32,column:55}},"26":{start:{line:33,column:4},end:{line:33,column:75}},"27":{start:{line:36,column:4},end:{line:38,column:6}},"28":{start:{line:37,column:8},end:{line:37,column:25}},"29":{start:{line:41,column:4},end:{line:47,column:6}},"30":{start:{line:42,column:8},end:{line:42,column:22}},"31":{start:{line:43,column:8},end:{line:43,column:51}},"32":{start:{line:44,column:8},end:{line:44,column:71}},"33":{start:{line:45,column:8},end:{line:45,column:67}},"34":{start:{line:46,column:8},end:{line:46,column:88}},"35":{start:{line:49,column:4},end:{line:51,column:6}},"36":{start:{line:50,column:8},end:{line:50,column:41}},"37":{start:{line:53,column:24},end:{line:62,column:6}},"38":{start:{line:64,column:4},end:{line:64,column:72}},"39":{start:{line:66,column:4},end:{line:69,column:7}},"40":{start:{line:67,column:8},end:{line:67,column:58}},"41":{start:{line:68,column:8},end:{line:68,column:30}},"42":{start:{line:71,column:4},end:{line:71,column:28}},"43":{start:{line:74,column:4},end:{line:74,column:39}},"44":{start:{line:79,column:4},end:{line:92,column:7}},"45":{start:{line:80,column:8},end:{line:91,column:9}},"46":{start:{line:85,column:12},end:{line:85,column:19}},"47":{start:{line:88,column:12},end:{line:88,column:51}},"48":{start:{line:89,column:12},end:{line:89,column:39}},"49":{start:{line:90,column:12},end:{line:90,column:65}},"50":{start:{line:119,column:4},end:{line:122,column:7}},"51":{start:{line:120,column:8},end:{line:120,column:49}},"52":{start:{line:121,column:8},end:{line:121,column:24}},"53":{start:{line:149,column:4},end:{line:156,column:7}},"54":{start:{line:150,column:8},end:{line:155,column:15}},"55":{start:{line:151,column:29},end:{line:151,column:99}},"56":{start:{line:151,column:67},end:{line:151,column:93}},"57":{start:{line:153,column:16},end:{line:153,column:32}},"58":{start:{line:154,column:16},end:{line:154,column:101}},"59":{start:{line:187,column:4},end:{line:194,column:7}},"60":{start:{line:188,column:8},end:{line:193,column:15}},"61":{start:{line:189,column:31},end:{line:189,column:58}},"62":{start:{line:191,column:16},end:{line:191,column:32}},"63":{start:{line:192,column:16},end:{line:192,column:85}},"64":{start:{line:220,column:4},end:{line:224,column:7}},"65":{start:{line:221,column:8},end:{line:223,column:11}},"66":{start:{line:222,column:12},end:{line:222,column:29}},"67":{start:{line:250,column:4},end:{line:254,column:7}},"68":{start:{line:251,column:8},end:{line:253,column:11}},"69":{start:{line:252,column:12},end:{line:252,column:31}},"70":{start:{line:298,column:4},end:{line:313,column:7}},"71":{start:{line:299,column:8},end:{line:312,column:9}},"72":{start:{line:300,column:12},end:{line:300,column:28}},"73":{start:{line:301,column:12},end:{line:301,column:82}},"74":{start:{line:303,column:12},end:{line:311,column:19}},"75":{start:{line:305,column:20},end:{line:305,column:36}},"76":{start:{line:306,column:20},end:{line:306,column:30}},"77":{start:{line:309,column:20},end:{line:309,column:36}},"78":{start:{line:310,column:20},end:{line:310,column:111}},"79":{start:{line:354,column:4},end:{line:379,column:7}},"80":{start:{line:355,column:8},end:{line:378,column:9}},"81":{start:{line:356,column:12},end:{line:356,column:28}},"82":{start:{line:357,column:12},end:{line:357,column:82}},"83":{start:{line:359,column:12},end:{line:377,column:15}},"84":{start:{line:360,column:16},end:{line:376,column:17}},"85":{start:{line:360,column:40},end:{line:360,column:54}},"86":{start:{line:361,column:20},end:{line:371,column:27}},"87":{start:{line:363,column:28},end:{line:363,column:50}},"88":{start:{line:364,column:28},end:{line:364,column:81}},"89":{start:{line:365,column:28},end:{line:365,column:44}},"90":{start:{line:366,column:28},end:{line:366,column:38}},"91":{start:{line:369,column:28},end:{line:369,column:44}},"92":{start:{line:370,column:28},end:{line:370,column:115}},"93":{start:{line:374,column:20},end:{line:374,column:36}},"94":{start:{line:375,column:20},end:{line:375,column:84}},"95":{start:{line:422,column:4},end:{line:438,column:7}},"96":{start:{line:423,column:8},end:{line:437,column:11}},"97":{start:{line:424,column:12},end:{line:436,column:13}},"98":{start:{line:425,column:16},end:{line:431,column:22}},"99":{start:{line:428,column:28},end:{line:428,column:44}},"100":{start:{line:429,column:28},end:{line:429,column:38}},"101":{start:{line:434,column:16},end:{line:434,column:32}},"102":{start:{line:435,column:16},end:{line:435,column:84}},"103":{start:{line:466,column:4},end:{line:473,column:7}},"104":{start:{line:467,column:8},end:{line:472,column:15}},"105":{start:{line:468,column:29},end:{line:468,column:101}},"106":{start:{line:468,column:68},end:{line:468,column:95}},"107":{start:{line:470,column:16},end:{line:470,column:32}},"108":{start:{line:471,column:16},end:{line:471,column:99}},"109":{start:{line:506,column:4},end:{line:513,column:7}},"110":{start:{line:507,column:8},end:{line:512,column:15}},"111":{start:{line:508,column:31},end:{line:508,column:58}},"112":{start:{line:510,column:16},end:{line:510,column:32}},"113":{start:{line:511,column:16},end:{line:511,column:82}},"114":{start:{line:552,column:4},end:{line:566,column:7}},"115":{start:{line:553,column:8},end:{line:565,column:15}},"116":{start:{line:555,column:16},end:{line:564,column:23}},"117":{start:{line:557,column:24},end:{line:557,column:77}},"118":{start:{line:558,column:24},end:{line:558,column:55}},"119":{start:{line:559,column:24},end:{line:559,column:34}},"120":{start:{line:562,column:24},end:{line:562,column:40}},"121":{start:{line:563,column:24},end:{line:563,column:117}},"122":{start:{line:597,column:4},end:{line:608,column:7}},"123":{start:{line:598,column:8},end:{line:607,column:15}},"124":{start:{line:600,column:16},end:{line:600,column:69}},"125":{start:{line:601,column:16},end:{line:601,column:32}},"126":{start:{line:602,column:16},end:{line:602,column:26}},"127":{start:{line:605,column:16},end:{line:605,column:32}},"128":{start:{line:606,column:16},end:{line:606,column:134}},"129":{start:{line:636,column:4},end:{line:662,column:7}},"130":{start:{line:637,column:29},end:{line:637,column:105}},"131":{start:{line:638,column:8},end:{line:638,column:42}},"132":{start:{line:641,column:28},end:{line:641,column:77}},"133":{start:{line:642,column:8},end:{line:646,column:11}},"134":{start:{line:643,column:12},end:{line:645,column:13}},"135":{start:{line:644,column:16},end:{line:644,column:112}},"136":{start:{line:649,column:8},end:{line:649,column:23}},"137":{start:{line:650,column:8},end:{line:661,column:11}},"138":{start:{line:651,column:12},end:{line:660,column:13}},"139":{start:{line:652,column:16},end:{line:652,column:32}},"140":{start:{line:653,column:16},end:{line:653,column:75}},"141":{start:{line:656,column:16},end:{line:656,column:38}},"142":{start:{line:657,column:16},end:{line:657,column:69}},"143":{start:{line:658,column:16},end:{line:658,column:32}},"144":{start:{line:659,column:16},end:{line:659,column:26}},"145":{start:{line:713,column:4},end:{line:725,column:7}},"146":{start:{line:714,column:8},end:{line:724,column:11}},"147":{start:{line:721,column:12},end:{line:721,column:38}},"148":{start:{line:722,column:12},end:{line:722,column:39}},"149":{start:{line:723,column:12},end:{line:723,column:19}},"150":{start:{line:773,column:4},end:{line:784,column:7}},"151":{start:{line:774,column:8},end:{line:783,column:11}},"152":{start:{line:780,column:12},end:{line:780,column:38}},"153":{start:{line:781,column:12},end:{line:781,column:39}},"154":{start:{line:782,column:12},end:{line:782,column:19}},"155":{start:{line:785,column:4},end:{line:785,column:15}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:24,column:17},end:{line:24,column:18}},loc:{start:{line:24,column:32},end:{line:786,column:1}},line:24},"1":{name:"(anonymous_1)",decl:{start:{line:36,column:23},end:{line:36,column:24}},loc:{start:{line:36,column:35},end:{line:38,column:5}},line:36},"2":{name:"(anonymous_2)",decl:{start:{line:41,column:23},end:{line:41,column:24}},loc:{start:{line:41,column:36},end:{line:47,column:5}},line:41},"3":{name:"(anonymous_3)",decl:{start:{line:49,column:26},end:{line:49,column:27}},loc:{start:{line:49,column:42},end:{line:51,column:5}},line:49},"4":{name:"(anonymous_4)",decl:{start:{line:66,column:30},end:{line:66,column:31}},loc:{start:{line:66,column:44},end:{line:69,column:5}},line:66},"5":{name:"(anonymous_5)",decl:{start:{line:79,column:20},end:{line:79,column:21}},loc:{start:{line:79,column:46},end:{line:92,column:5}},line:79},"6":{name:"(anonymous_6)",decl:{start:{line:119,column:28},end:{line:119,column:29}},loc:{start:{line:119,column:48},end:{line:122,column:5}},line:119},"7":{name:"(anonymous_7)",decl:{start:{line:149,column:32},end:{line:149,column:33}},loc:{start:{line:149,column:52},end:{line:156,column:5}},line:149},"8":{name:"(anonymous_8)",decl:{start:{line:151,column:18},end:{line:151,column:19}},loc:{start:{line:151,column:29},end:{line:151,column:99}},line:151},"9":{name:"(anonymous_9)",decl:{start:{line:151,column:60},end:{line:151,column:61}},loc:{start:{line:151,column:65},end:{line:151,column:95}},line:151},"10":{name:"(anonymous_10)",decl:{start:{line:152,column:19},end:{line:152,column:20}},loc:{start:{line:152,column:25},end:{line:155,column:13}},line:152},"11":{name:"(anonymous_11)",decl:{start:{line:187,column:41},end:{line:187,column:42}},loc:{start:{line:187,column:61},end:{line:194,column:5}},line:187},"12":{name:"(anonymous_12)",decl:{start:{line:189,column:18},end:{line:189,column:19}},loc:{start:{line:189,column:31},end:{line:189,column:58}},line:189},"13":{name:"(anonymous_13)",decl:{start:{line:190,column:19},end:{line:190,column:20}},loc:{start:{line:190,column:25},end:{line:193,column:13}},line:190},"14":{name:"(anonymous_14)",decl:{start:{line:220,column:41},end:{line:220,column:42}},loc:{start:{line:220,column:61},end:{line:224,column:5}},line:220},"15":{name:"(anonymous_15)",decl:{start:{line:221,column:29},end:{line:221,column:30}},loc:{start:{line:221,column:47},end:{line:223,column:9}},line:221},"16":{name:"(anonymous_16)",decl:{start:{line:250,column:43},end:{line:250,column:44}},loc:{start:{line:250,column:63},end:{line:254,column:5}},line:250},"17":{name:"(anonymous_17)",decl:{start:{line:251,column:31},end:{line:251,column:32}},loc:{start:{line:251,column:51},end:{line:253,column:9}},line:251},"18":{name:"(anonymous_18)",decl:{start:{line:298,column:44},end:{line:298,column:45}},loc:{start:{line:298,column:64},end:{line:313,column:5}},line:298},"19":{name:"(anonymous_19)",decl:{start:{line:304,column:22},end:{line:304,column:23}},loc:{start:{line:304,column:34},end:{line:307,column:17}},line:304},"20":{name:"(anonymous_20)",decl:{start:{line:308,column:23},end:{line:308,column:24}},loc:{start:{line:308,column:46},end:{line:311,column:17}},line:308},"21":{name:"(anonymous_21)",decl:{start:{line:354,column:44},end:{line:354,column:45}},loc:{start:{line:354,column:64},end:{line:379,column:5}},line:354},"22":{name:"(anonymous_22)",decl:{start:{line:359,column:35},end:{line:359,column:36}},loc:{start:{line:359,column:55},end:{line:377,column:13}},line:359},"23":{name:"(anonymous_23)",decl:{start:{line:360,column:33},end:{line:360,column:34}},loc:{start:{line:360,column:38},end:{line:360,column:56}},line:360},"24":{name:"(anonymous_24)",decl:{start:{line:362,column:30},end:{line:362,column:31}},loc:{start:{line:362,column:42},end:{line:367,column:25}},line:362},"25":{name:"(anonymous_25)",decl:{start:{line:368,column:31},end:{line:368,column:32}},loc:{start:{line:368,column:52},end:{line:371,column:25}},line:368},"26":{name:"(anonymous_26)",decl:{start:{line:422,column:42},end:{line:422,column:43}},loc:{start:{line:422,column:62},end:{line:438,column:5}},line:422},"27":{name:"(anonymous_27)",decl:{start:{line:423,column:29},end:{line:423,column:30}},loc:{start:{line:423,column:47},end:{line:437,column:9}},line:423},"28":{name:"(anonymous_28)",decl:{start:{line:427,column:24},end:{line:427,column:25}},loc:{start:{line:427,column:36},end:{line:430,column:25}},line:427},"29":{name:"(anonymous_29)",decl:{start:{line:466,column:30},end:{line:466,column:31}},loc:{start:{line:466,column:50},end:{line:473,column:5}},line:466},"30":{name:"(anonymous_30)",decl:{start:{line:468,column:18},end:{line:468,column:19}},loc:{start:{line:468,column:29},end:{line:468,column:101}},line:468},"31":{name:"(anonymous_31)",decl:{start:{line:468,column:61},end:{line:468,column:62}},loc:{start:{line:468,column:66},end:{line:468,column:97}},line:468},"32":{name:"(anonymous_32)",decl:{start:{line:469,column:19},end:{line:469,column:20}},loc:{start:{line:469,column:25},end:{line:472,column:13}},line:469},"33":{name:"(anonymous_33)",decl:{start:{line:506,column:39},end:{line:506,column:40}},loc:{start:{line:506,column:59},end:{line:513,column:5}},line:506},"34":{name:"(anonymous_34)",decl:{start:{line:508,column:18},end:{line:508,column:19}},loc:{start:{line:508,column:31},end:{line:508,column:58}},line:508},"35":{name:"(anonymous_35)",decl:{start:{line:509,column:19},end:{line:509,column:20}},loc:{start:{line:509,column:25},end:{line:512,column:13}},line:509},"36":{name:"(anonymous_36)",decl:{start:{line:552,column:39},end:{line:552,column:40}},loc:{start:{line:552,column:59},end:{line:566,column:5}},line:552},"37":{name:"(anonymous_37)",decl:{start:{line:554,column:18},end:{line:554,column:19}},loc:{start:{line:554,column:30},end:{line:565,column:13}},line:554},"38":{name:"(anonymous_38)",decl:{start:{line:556,column:26},end:{line:556,column:27}},loc:{start:{line:556,column:32},end:{line:560,column:21}},line:556},"39":{name:"(anonymous_39)",decl:{start:{line:561,column:27},end:{line:561,column:28}},loc:{start:{line:561,column:33},end:{line:564,column:21}},line:561},"40":{name:"(anonymous_40)",decl:{start:{line:597,column:42},end:{line:597,column:43}},loc:{start:{line:597,column:62},end:{line:608,column:5}},line:597},"41":{name:"(anonymous_41)",decl:{start:{line:599,column:18},end:{line:599,column:19}},loc:{start:{line:599,column:24},end:{line:603,column:13}},line:599},"42":{name:"(anonymous_42)",decl:{start:{line:604,column:19},end:{line:604,column:20}},loc:{start:{line:604,column:25},end:{line:607,column:13}},line:604},"43":{name:"(anonymous_43)",decl:{start:{line:636,column:41},end:{line:636,column:42}},loc:{start:{line:636,column:61},end:{line:662,column:5}},line:636},"44":{name:"(anonymous_44)",decl:{start:{line:642,column:30},end:{line:642,column:31}},loc:{start:{line:642,column:44},end:{line:646,column:9}},line:642},"45":{name:"(anonymous_45)",decl:{start:{line:650,column:87},end:{line:650,column:88}},loc:{start:{line:650,column:102},end:{line:661,column:9}},line:650},"46":{name:"(anonymous_46)",decl:{start:{line:713,column:42},end:{line:713,column:43}},loc:{start:{line:713,column:62},end:{line:725,column:5}},line:713},"47":{name:"(anonymous_47)",decl:{start:{line:720,column:16},end:{line:720,column:17}},loc:{start:{line:720,column:28},end:{line:724,column:9}},line:720},"48":{name:"(anonymous_48)",decl:{start:{line:773,column:55},end:{line:773,column:56}},loc:{start:{line:773,column:75},end:{line:784,column:5}},line:773},"49":{name:"(anonymous_49)",decl:{start:{line:779,column:16},end:{line:779,column:17}},loc:{start:{line:779,column:28},end:{line:783,column:9}},line:779}},branchMap:{"0":{loc:{start:{line:80,column:8},end:{line:91,column:9}},type:"if",locations:[{start:{line:80,column:8},end:{line:91,column:9}},{start:{line:80,column:8},end:{line:91,column:9}}],line:80},"1":{loc:{start:{line:80,column:12},end:{line:82,column:42}},type:"binary-expr",locations:[{start:{line:80,column:12},end:{line:80,column:40}},{start:{line:81,column:12},end:{line:81,column:41}},{start:{line:82,column:12},end:{line:82,column:42}}],line:80},"2":{loc:{start:{line:299,column:8},end:{line:312,column:9}},type:"if",locations:[{start:{line:299,column:8},end:{line:312,column:9}},{start:{line:299,column:8},end:{line:312,column:9}}],line:299},"3":{loc:{start:{line:355,column:8},end:{line:378,column:9}},type:"if",locations:[{start:{line:355,column:8},end:{line:378,column:9}},{start:{line:355,column:8},end:{line:378,column:9}}],line:355},"4":{loc:{start:{line:360,column:16},end:{line:376,column:17}},type:"if",locations:[{start:{line:360,column:16},end:{line:376,column:17}},{start:{line:360,column:16},end:{line:376,column:17}}],line:360},"5":{loc:{start:{line:424,column:12},end:{line:436,column:13}},type:"if",locations:[{start:{line:424,column:12},end:{line:436,column:13}},{start:{line:424,column:12},end:{line:436,column:13}}],line:424},"6":{loc:{start:{line:558,column:35},end:{line:558,column:53}},type:"cond-expr",locations:[{start:{line:558,column:44},end:{line:558,column:47}},{start:{line:558,column:50},end:{line:558,column:53}}],line:558},"7":{loc:{start:{line:643,column:12},end:{line:645,column:13}},type:"if",locations:[{start:{line:643,column:12},end:{line:645,column:13}},{start:{line:643,column:12},end:{line:645,column:13}}],line:643},"8":{loc:{start:{line:651,column:12},end:{line:660,column:13}},type:"if",locations:[{start:{line:651,column:12},end:{line:660,column:13}},{start:{line:651,column:12},end:{line:660,column:13}}],line:651}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0,"142":0,"143":0,"144":0,"145":0,"146":0,"147":0,"148":0,"149":0,"150":0,"151":0,"152":0,"153":0,"154":0,"155":0},f:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0},b:{"0":[0,0],"1":[0,0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0]},_coverageSchema:"43e27e138ebf9cfc5966b082cf9a028302ed4184",hash:"3215cdd7d218ce68fd4fc28579a5c0fd3340a3f6"};var coverage=global[gcv]||(global[gcv]={});if(coverage[path]&&coverage[path].hash===hash){return coverage[path];}return coverage[path]=coverageData;}();// -------------------------------------------------------------------------------------------------
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License (MIT). See LICENSE in the repo root for license information.
// -------------------------------------------------------------------------------------------------
var authApiKey=(cov_ir7g56url.s[0]++,require('./lib/auth-api-key/auth-api-key'));var constants=(cov_ir7g56url.s[1]++,require('./lib/constants/constants'));var express=(cov_ir7g56url.s[2]++,require('express'));var cookieParser=(cov_ir7g56url.s[3]++,require('cookie-parser'));var errorCodes=(cov_ir7g56url.s[4]++,require('./lib/error/error').errorCodes);var errorMessage=(cov_ir7g56url.s[5]++,require('./lib/error/error').errorMessage);var fs=(cov_ir7g56url.s[6]++,require('fs'));var fse=(cov_ir7g56url.s[7]++,require('fs-extra'));var gfs=(cov_ir7g56url.s[8]++,require('./lib/git-filesystem/git-filesystem')(constants.TEMPLATE_FILES_LOCATION));var path=(cov_ir7g56url.s[9]++,require('path'));var bodyParser=(cov_ir7g56url.s[10]++,require('body-parser'));var swaggerUi=(cov_ir7g56url.s[11]++,require('swagger-ui-express'));var swaggerJSDoc=(cov_ir7g56url.s[12]++,require('swagger-jsdoc'));var WorkerPool=(cov_ir7g56url.s[13]++,require('./lib/workers/workerPool'));var fileSystemCache=(cov_ir7g56url.s[14]++,require('./lib/fsCache/cache'));var handlebarsHelpers=(cov_ir7g56url.s[15]++,require('./lib/handlebars-converter/handlebars-helpers').external);var ncp=(cov_ir7g56url.s[16]++,require('ncp').ncp);cov_ir7g56url.s[17]++;module.exports=function(app){cov_ir7g56url.f[0]++;const workerPool=(cov_ir7g56url.s[18]++,new WorkerPool('./src/lib/workers/worker.js',require('os').cpus().length));let templateCache=(cov_ir7g56url.s[19]++,new fileSystemCache(constants.TEMPLATE_FILES_LOCATION));cov_ir7g56url.s[20]++;templateCache.init();let messageCache=(cov_ir7g56url.s[21]++,new fileSystemCache(constants.SAMPLE_DATA_LOCATION));cov_ir7g56url.s[22]++;messageCache.init();cov_ir7g56url.s[23]++;app.use(bodyParser.json({limit:'50mb',extended:true}));cov_ir7g56url.s[24]++;app.use(bodyParser.text({limit:'50mb',extended:true}));cov_ir7g56url.s[25]++;app.use(express.static(constants.STATIC_LOCATION));cov_ir7g56url.s[26]++;app.use('/codemirror',express.static(constants.CODE_MIRROR_LOCATION));// access function for constants (test instrumentation)
cov_ir7g56url.s[27]++;app.getConstants=function(){cov_ir7g56url.f[1]++;cov_ir7g56url.s[28]++;return constants;};// access function for constants  (test instrumentation)
cov_ir7g56url.s[29]++;app.setConstants=function(c){cov_ir7g56url.f[2]++;cov_ir7g56url.s[30]++;constants=c;cov_ir7g56url.s[31]++;gfs.setRepoPath(c.TEMPLATE_FILES_LOCATION);cov_ir7g56url.s[32]++;templateCache=new fileSystemCache(c.TEMPLATE_FILES_LOCATION);cov_ir7g56url.s[33]++;messageCache=new fileSystemCache(c.SAMPLE_DATA_LOCATION);cov_ir7g56url.s[34]++;workerPool.broadcast({'type':'constantsUpdated','data':JSON.stringify(c)});};cov_ir7g56url.s[35]++;app.setValidApiKeys=function(keys){cov_ir7g56url.f[3]++;cov_ir7g56url.s[36]++;authApiKey.setValidApiKeys(keys);};const swaggerSpec=(cov_ir7g56url.s[37]++,swaggerJSDoc({swaggerDefinition:{info:{title:'FHIR Converter API',// If changing the version update the checks in convert/hl7 and convert/hl7/:template
version:'1.0'}},apis:[__filename]}));cov_ir7g56url.s[38]++;app.use('/api-docs',swaggerUi.serve,swaggerUi.setup(swaggerSpec));cov_ir7g56url.s[39]++;app.get('/api-docs.json',(req,res)=>{cov_ir7g56url.f[4]++;cov_ir7g56url.s[40]++;res.setHeader('Content-Type','application/json');cov_ir7g56url.s[41]++;res.send(swaggerSpec);});cov_ir7g56url.s[42]++;app.use(cookieParser());// Adding auth middleware after static routes and API documentation
cov_ir7g56url.s[43]++;app.use(authApiKey.validateApiKey);// Enable git endpoint, we are only allowing a single repo on the "root"
// Note: This is added after the API key middleware, so a key will be required
//       git config --local http.http://localhost:2019/git.extraheader "X-MS-CONVERSION-API-KEY: 123"
cov_ir7g56url.s[44]++;app.use('/git',function(req,res,next){cov_ir7g56url.f[5]++;cov_ir7g56url.s[45]++;if((cov_ir7g56url.b[1][0]++,!req.url.startsWith('/info'))&&(cov_ir7g56url.b[1][1]++,req.url!='/git-upload-pack')&&(cov_ir7g56url.b[1][2]++,req.url!='/git-receive-pack')){cov_ir7g56url.b[0][0]++;cov_ir7g56url.s[46]++;// This could also just return 404 at this point, 
// but passing it on in case we hook something up later  
next();}else{cov_ir7g56url.b[0][1]++;cov_ir7g56url.s[47]++;req.url='/'+gfs.repoName+req.url;cov_ir7g56url.s[48]++;gfs.repos.handle(req,res);cov_ir7g56url.s[49]++;workerPool.broadcast({'type':'templatesUpdated'});}});/**
     * @swagger
     * /api/helpers:
     *   get:
     *     description: Lists available template helpers
     *     produces:
     *       - application/json
     *     parameters:
     *       - name: code
     *         in: query
     *         description: 'API key'
     *         required: false
     *         type: string
     *       - name: X-MS-CONVERSION-API-KEY
     *         in: header
     *         description: 'API key'
     *         required: false
     *         type: string
     *     responses:
     *       200:
     *         description: List of available template helpers
     *       401:
     *         description: Unauthorized
     */cov_ir7g56url.s[50]++;app.get('/api/helpers',function(req,res){cov_ir7g56url.f[6]++;cov_ir7g56url.s[51]++;res.json({helpers:handlebarsHelpers});cov_ir7g56url.s[52]++;res.status(200);});/**
     * @swagger
     * /api/sample-data:
     *   get:
     *     description: Lists available sample data
     *     produces:
     *       - application/json
     *     parameters:
     *       - name: code
     *         in: query
     *         description: 'API key'
     *         required: false
     *         type: string
     *       - name: X-MS-CONVERSION-API-KEY
     *         in: header
     *         description: 'API key'
     *         required: false
     *         type: string
     *     responses:
     *       200:
     *         description: List of available sample data
     *       401:
     *         description: Unauthorized
     */cov_ir7g56url.s[53]++;app.get('/api/sample-data',function(req,res){cov_ir7g56url.f[7]++;cov_ir7g56url.s[54]++;messageCache.keys().then(files=>{cov_ir7g56url.f[8]++;cov_ir7g56url.s[55]++;return res.json({messages:files.map(f=>{cov_ir7g56url.f[9]++;cov_ir7g56url.s[56]++;return{messageName:f};})});}).catch(()=>{cov_ir7g56url.f[10]++;cov_ir7g56url.s[57]++;res.status(404);cov_ir7g56url.s[58]++;res.json(errorMessage(errorCodes.NotFound,'Unable to access sample data location'));});});/**
     * @swagger
     * /api/sample-data/{file}:
     *   get:
     *     description: Returns a specific sample data
     *     produces:
     *       - text/plain
     *     parameters:
     *       - name: file
     *         description: Name of a specific file
     *         in: path
     *         required: true
     *         type: string
     *       - name: code
     *         in: query
     *         description: 'API key'
     *         required: false
     *         type: string
     *       - name: X-MS-CONVERSION-API-KEY
     *         in: header
     *         description: 'API key'
     *         required: false
     *         type: string
     *     responses:
     *       200:
     *         description: A specific sample data
     *       401:
     *         description: Unauthorized
     */cov_ir7g56url.s[59]++;app.get('/api/sample-data/:file(*)',function(req,res){cov_ir7g56url.f[11]++;cov_ir7g56url.s[60]++;messageCache.get(req.params.file).then(content=>{cov_ir7g56url.f[12]++;cov_ir7g56url.s[61]++;return res.end(content.toString());}).catch(()=>{cov_ir7g56url.f[13]++;cov_ir7g56url.s[62]++;res.status(404);cov_ir7g56url.s[63]++;res.json(errorMessage(errorCodes.NotFound,"Sample data not found"));});});/**
     * @swagger
     * /api/templates/git/status:
     *   get:
     *     description: Lists uncommitted changes
     *     produces:
     *       - application/json
     *     parameters:
     *       - name: code
     *         in: query
     *         description: 'API key'
     *         required: false
     *         type: string
     *       - name: X-MS-CONVERSION-API-KEY
     *         in: header
     *         description: 'API key'
     *         required: false
     *         type: string
     *     responses:
     *       200:
     *         description: Current list of changes
     *       401:
     *         description: Unauthorized
     */cov_ir7g56url.s[64]++;app.get('/api/templates/git/status',function(req,res){cov_ir7g56url.f[14]++;cov_ir7g56url.s[65]++;gfs.getStatus().then(function(status){cov_ir7g56url.f[15]++;cov_ir7g56url.s[66]++;res.json(status);});});/**
     * @swagger
     * /api/templates/git/branches:
     *   get:
     *     description: Lists of branches
     *     produces:
     *       - application/json
     *     parameters:
     *       - name: code
     *         in: query
     *         description: 'API key'
     *         required: false
     *         type: string
     *       - name: X-MS-CONVERSION-API-KEY
     *         in: header
     *         description: 'API key'
     *         required: false
     *         type: string
     *     responses:
     *       200:
     *         description: List of branches
     *       401:
     *         description: Unauthorized
     */cov_ir7g56url.s[67]++;app.get('/api/templates/git/branches',function(req,res){cov_ir7g56url.f[16]++;cov_ir7g56url.s[68]++;gfs.getBranches().then(function(branches){cov_ir7g56url.f[17]++;cov_ir7g56url.s[69]++;res.json(branches);});});/**
     * @swagger
     * /api/templates/git/branches:
     *   post:
     *     description: Create new branch (from head)
     *     produces:
     *       - application/json
     *     parameters:
     *       - name: code
     *         in: query
     *         description: 'API key'
     *         required: false
     *         type: string
     *       - name: X-MS-CONVERSION-API-KEY
     *         in: header
     *         description: 'API key'
     *         required: false
     *         type: string
     *       - name: branch
     *         in: body
     *         required: true
     *         schema:
     *           type: object
     *           properties:
     *             name:
     *               description: Branch name
     *               type: string
     *             baseBranch:
     *               description: Base branch name
     *               type: string
     *           required:
     *             - name
     *     responses:
     *       201:
     *         description: Created
     *       400:
     *         description: Bad request
     *       401:
     *         description: Unauthorized
     *       409:
     *         description: Conflict (unable to create branch)
     */cov_ir7g56url.s[70]++;app.post('/api/templates/git/branches',function(req,res){cov_ir7g56url.f[18]++;cov_ir7g56url.s[71]++;if(!req.body.name){cov_ir7g56url.b[2][0]++;cov_ir7g56url.s[72]++;res.status(400);cov_ir7g56url.s[73]++;res.json(errorMessage(errorCodes.BadRequest,'Branch name required'));}else{cov_ir7g56url.b[2][1]++;cov_ir7g56url.s[74]++;gfs.createBranch(req.body.name,req.body.baseBranch).then(function(){cov_ir7g56url.f[19]++;cov_ir7g56url.s[75]++;res.status(201);cov_ir7g56url.s[76]++;res.end();}).catch(function(errorReason){cov_ir7g56url.f[20]++;cov_ir7g56url.s[77]++;res.status(409);cov_ir7g56url.s[78]++;res.json(errorMessage(errorCodes.Conflict,'Unable to create new branch: '+errorReason));});}});/**
     * @swagger
     * /api/templates/git/checkout:
     *   post:
     *     description: Checkout branch
     *     produces:
     *       - application/json
     *     parameters:
     *       - name: code
     *         in: query
     *         description: 'API key'
     *         required: false
     *         type: string
     *       - name: X-MS-CONVERSION-API-KEY
     *         in: header
     *         description: 'API key'
     *         required: false
     *         type: string
     *       - name: branch
     *         in: body
     *         required: true
     *         schema:
     *           type: object
     *           properties:
     *             name:
     *               description: Branch name
     *               type: string
     *           required:
     *             - name
     *     responses:
     *       200:
     *         description: OK
     *       400:
     *         description: Bad Request
     *       401:
     *         description: Unauthorized
     *       404:
     *         description: Branch not found
     */cov_ir7g56url.s[79]++;app.post('/api/templates/git/checkout',function(req,res){cov_ir7g56url.f[21]++;cov_ir7g56url.s[80]++;if(!req.body.name){cov_ir7g56url.b[3][0]++;cov_ir7g56url.s[81]++;res.status(400);cov_ir7g56url.s[82]++;res.json(errorMessage(errorCodes.BadRequest,'Branch name required'));}else{cov_ir7g56url.b[3][1]++;cov_ir7g56url.s[83]++;gfs.getBranches().then(function(branches){cov_ir7g56url.f[22]++;cov_ir7g56url.s[84]++;if(branches.map(b=>{cov_ir7g56url.f[23]++;cov_ir7g56url.s[85]++;return b.name;}).includes(req.body.name)){cov_ir7g56url.b[4][0]++;cov_ir7g56url.s[86]++;gfs.checkoutBranch(req.body.name).then(function(){cov_ir7g56url.f[24]++;cov_ir7g56url.s[87]++;templateCache.clear();cov_ir7g56url.s[88]++;workerPool.broadcast({'type':'templatesUpdated'});cov_ir7g56url.s[89]++;res.status(200);cov_ir7g56url.s[90]++;res.end();}).catch(function(errReason){cov_ir7g56url.f[25]++;cov_ir7g56url.s[91]++;res.status(409);cov_ir7g56url.s[92]++;res.json(errorMessage(errorCodes.Conflict,'Unable to checkout branch: '+errReason));});}else{cov_ir7g56url.b[4][1]++;cov_ir7g56url.s[93]++;res.status(404);cov_ir7g56url.s[94]++;res.json(errorMessage(errorCodes.NotFound,'Branch not found'));}});}});/**
     * @swagger
     * /api/templates/git/commit:
     *   post:
     *     description: Commit ALL changes
     *     produces:
     *       - application/json
     *     parameters:
     *       - name: code
     *         in: query
     *         description: 'API key'
     *         required: false
     *         type: string
     *       - name: X-MS-CONVERSION-API-KEY
     *         in: header
     *         description: 'API key'
     *         required: false
     *         type: string
     *       - name: commit
     *         in: body
     *         required: false
     *         schema:
     *           type: object
     *           properties:
     *             message:
     *               description: Commit message
     *               type: string
     *             name:
     *               description: Committers name
     *               type: string
     *             email:
     *               description: Committers email
     *               type: string
     *     responses:
     *       200:
     *         description: Changes committed
     *       401:
     *         description: Unauthorized
     *       409:
     *         description: Conflict (no changes to commit)
     */cov_ir7g56url.s[95]++;app.post('/api/templates/git/commit',function(req,res){cov_ir7g56url.f[26]++;cov_ir7g56url.s[96]++;gfs.getStatus().then(function(status){cov_ir7g56url.f[27]++;cov_ir7g56url.s[97]++;if(status.length>0){cov_ir7g56url.b[5][0]++;cov_ir7g56url.s[98]++;gfs.commitAllChanges(req.body.message,req.body.name,req.body.email).then(function(){cov_ir7g56url.f[28]++;cov_ir7g56url.s[99]++;res.status(200);cov_ir7g56url.s[100]++;res.end();});}else{cov_ir7g56url.b[5][1]++;cov_ir7g56url.s[101]++;res.status(409);cov_ir7g56url.s[102]++;res.json(errorMessage(errorCodes.Conflict,'No changes to commit'));}});});/**
     * @swagger
     * /api/templates:
     *   get:
     *     description: Lists available templates
     *     produces:
     *       - application/json
     *     parameters:
     *       - name: code
     *         in: query
     *         description: 'API key'
     *         required: false
     *         type: string
     *       - name: X-MS-CONVERSION-API-KEY
     *         in: header
     *         description: 'API key'
     *         required: false
     *         type: string
     *     responses:
     *       200:
     *         description: List of available templates
     *       401:
     *         description: Unauthorized
     *       404:
     *         description: Templates not found
     */cov_ir7g56url.s[103]++;app.get('/api/templates',function(req,res){cov_ir7g56url.f[29]++;cov_ir7g56url.s[104]++;templateCache.keys().then(files=>{cov_ir7g56url.f[30]++;cov_ir7g56url.s[105]++;return res.json({templates:files.map(f=>{cov_ir7g56url.f[31]++;cov_ir7g56url.s[106]++;return{templateName:f};})});}).catch(()=>{cov_ir7g56url.f[32]++;cov_ir7g56url.s[107]++;res.status(404);cov_ir7g56url.s[108]++;res.json(errorMessage(errorCodes.NotFound,'Unable to access templates location'));});});/**
     * @swagger
     * /api/templates/{file}:
     *   get:
     *     description: Returns a specific template
     *     produces:
     *       - text/plain
     *     parameters:
     *       - name: file
     *         description: Name of a specific file
     *         in: path
     *         required: true
     *         type: string
     *       - name: code
     *         in: query
     *         description: 'API key'
     *         required: false
     *         type: string
     *       - name: X-MS-CONVERSION-API-KEY
     *         in: header
     *         description: 'API key'
     *         required: false
     *         type: string
     *     responses:
     *       200:
     *         description: A specific template
     *       401:
     *         description: Unauthorized
     *       404:
     *         description: Not found
     */cov_ir7g56url.s[109]++;app.get('/api/templates/:file(*)',function(req,res){cov_ir7g56url.f[33]++;cov_ir7g56url.s[110]++;templateCache.get(req.params.file).then(content=>{cov_ir7g56url.f[34]++;cov_ir7g56url.s[111]++;return res.end(content.toString());}).catch(()=>{cov_ir7g56url.f[35]++;cov_ir7g56url.s[112]++;res.status(404);cov_ir7g56url.s[113]++;res.json(errorMessage(errorCodes.NotFound,"Template not found"));});});/**
     * @swagger
     * /api/templates/{file}:
     *   put:
     *     description: Stores a template in the template store
     *     consumes:
     *       - text/plain
     *     parameters:
     *       - name: file
     *         description: The file name
     *         required: true
     *         in: path
     *       - name: template
     *         description: The conversion template
     *         in: body
     *         required: true
     *         type: string
     *       - name: code
     *         in: query
     *         description: 'API key'
     *         required: false
     *         type: string
     *       - name: X-MS-CONVERSION-API-KEY
     *         in: header
     *         description: 'API key'
     *         required: false
     *         type: string
     *     responses:
     *       201:
     *         description: Created
     *       200:
     *         description: Updated
     *       401:
     *         description: Unauthorized
     *       403:
     *         description: Forbidden
     */cov_ir7g56url.s[114]++;app.put('/api/templates/:file(*)',function(req,res){cov_ir7g56url.f[36]++;cov_ir7g56url.s[115]++;templateCache.has(req.params.file).then(exists=>{cov_ir7g56url.f[37]++;cov_ir7g56url.s[116]++;templateCache.set(req.params.file,req.body.toString()).then(()=>{cov_ir7g56url.f[38]++;cov_ir7g56url.s[117]++;workerPool.broadcast({'type':'templatesUpdated'});cov_ir7g56url.s[118]++;res.status(exists?(cov_ir7g56url.b[6][0]++,200):(cov_ir7g56url.b[6][1]++,201));cov_ir7g56url.s[119]++;res.end();}).catch(()=>{cov_ir7g56url.f[39]++;cov_ir7g56url.s[120]++;res.status(403);cov_ir7g56url.s[121]++;res.json(errorMessage(errorCodes.WriteError,'Unable to write template '+req.params.file));});});});/**
    * @swagger
    * /api/templates/{file}:
    *   delete:
    *     description: Deletes a template
    *     parameters:
    *       - name: file
    *         description: Name of a specific file
    *         in: path
    *         required: true
    *         type: string
    *       - name: code
    *         in: query
    *         description: 'API key'
    *         required: false
    *         type: string
    *       - name: X-MS-CONVERSION-API-KEY
    *         in: header
    *         description: 'API key'
    *         required: false
    *         type: string
    *     responses:
    *       204:
    *         description: No content
    *       401:
    *         description: Unauthorized
    *       404:
    *         description: Not found
    */cov_ir7g56url.s[122]++;app.delete('/api/templates/:file(*)',function(req,res){cov_ir7g56url.f[40]++;cov_ir7g56url.s[123]++;templateCache.remove(req.params.file).then(()=>{cov_ir7g56url.f[41]++;cov_ir7g56url.s[124]++;workerPool.broadcast({'type':'templatesUpdated'});cov_ir7g56url.s[125]++;res.status(204);cov_ir7g56url.s[126]++;res.end();}).catch(()=>{cov_ir7g56url.f[42]++;cov_ir7g56url.s[127]++;res.status(404);cov_ir7g56url.s[128]++;res.json(errorMessage(errorCodes.NotFound,'Unable to find a template with name '+req.params.file+' to delete.'));});});/**
     * @swagger
     * /api/UpdateBaseTemplates:
     *   post:
     *     description: Updates base templates (deletes existing data). This should be used only when latest version of templates needs to be pulled.
     *     produces:
     *       - application/json
     *     parameters:
     *       - name: code
     *         in: query
     *         description: 'API key'
     *         required: false
     *         type: string
     *       - name: X-MS-CONVERSION-API-KEY
     *         in: header
     *         description: 'API key'
     *         required: false
     *         type: string
     *     responses:
     *       200:
     *         description: templates updated
     *       401:
     *         description: Unauthorized
     *       403:
     *         description: Forbidden
     */cov_ir7g56url.s[129]++;app.post('/api/UpdateBaseTemplates',function(req,res){cov_ir7g56url.f[43]++;let tempFolderName=(cov_ir7g56url.s[130]++,path.join(constants.TEMPLATE_FILES_LOCATION,`.temp${new Date().getTime()}`));cov_ir7g56url.s[131]++;fse.ensureDirSync(tempFolderName);// Rename (instead of delete) to avoid timeout.
var existingFiles=(cov_ir7g56url.s[132]++,fs.readdirSync(constants.TEMPLATE_FILES_LOCATION));cov_ir7g56url.s[133]++;existingFiles.forEach(function(fl){cov_ir7g56url.f[44]++;cov_ir7g56url.s[134]++;if(!fl.startsWith('.')){cov_ir7g56url.b[7][0]++;cov_ir7g56url.s[135]++;fse.renameSync(path.join(constants.TEMPLATE_FILES_LOCATION,fl),path.join(tempFolderName,fl));}else{cov_ir7g56url.b[7][1]++;}});// Using ncp since fs/fs-extra failed randomly with ENOENT for src files.
cov_ir7g56url.s[136]++;ncp.limit=16;cov_ir7g56url.s[137]++;ncp(constants.BASE_TEMPLATE_FILES_LOCATION,constants.TEMPLATE_FILES_LOCATION,function(err){cov_ir7g56url.f[45]++;cov_ir7g56url.s[138]++;if(err){cov_ir7g56url.b[8][0]++;cov_ir7g56url.s[139]++;res.status(403);cov_ir7g56url.s[140]++;res.json(errorMessage(errorCodes.WriteError,err.message));}else{cov_ir7g56url.b[8][1]++;cov_ir7g56url.s[141]++;templateCache.clear();cov_ir7g56url.s[142]++;workerPool.broadcast({'type':'templatesUpdated'});cov_ir7g56url.s[143]++;res.status(200);cov_ir7g56url.s[144]++;res.end();}});});/**
    * @swagger
    * /api/convert/{srcDataType}:
    *   post:
    *     description: Converts given data to FHIR using template
    *     produces:
    *       - application/json
    *     consumes:
    *       - text/plain
    *     parameters:
     *       - name: conversion
     *         description: Conversion task
     *         in: body
     *         required: true
     *         schema:
     *           type: object
     *           properties:
     *             templateBase64:
     *               type: string
     *             srcDataBase64:
     *               type: string
     *             templatesOverrideBase64:
     *               type: string
     *           required:
     *             - templateBase64
     *             - srcDataBase64
    *       - name: api-version
    *         in: query
    *         description: API version to use.
    *         required: false
    *         type: string
    *       - name: code
    *         in: query
    *         description: 'API key'
    *         required: false
    *         type: string
    *       - name: X-MS-CONVERSION-API-KEY
    *         in: header
    *         description: 'API key'
    *         required: false
    *         type: string
    *     responses:
    *       200:
    *         description: Converted message
    *       400:
    *         description: Bad request
    *       401:
    *         description: Unauthorized
    */cov_ir7g56url.s[145]++;app.post('/api/convert/:srcDataType',function(req,res){cov_ir7g56url.f[46]++;cov_ir7g56url.s[146]++;workerPool.exec({'type':'/api/convert/:srcDataType','srcDataType':req.params.srcDataType,'srcDataBase64':req.body.srcDataBase64,'templateBase64':req.body.templateBase64,'templatesOverrideBase64':req.body.templatesOverrideBase64}).then(result=>{cov_ir7g56url.f[47]++;cov_ir7g56url.s[147]++;res.status(result.status);cov_ir7g56url.s[148]++;res.json(result.resultMsg);cov_ir7g56url.s[149]++;return;});});/**
    * @swagger
    * /api/convert/{template}:
    *   post:
    *     description: Converts given data to FHIR using template
    *     produces:
    *       - application/json
    *     consumes:
    *       - text/plain
    *     parameters:
    *       - name: template
    *         description: Name of a specific template
    *         in: path
    *         required: true
    *         type: string
    *       - name: srcData
    *         description: the source data to convert
    *         in: body
    *         required: true
    *         schema:
    *           type: string
    *       - name: api-version
    *         in: query
    *         description: API version to use. The current version is 1.0. Previous versions, including passing no version, are deprecated.
    *         required: false
    *         type: string
    *       - name: code
    *         in: query
    *         description: 'API key'
    *         required: false
    *         type: string
    *       - name: X-MS-CONVERSION-API-KEY
    *         in: header
    *         description: 'API key'
    *         required: false
    *         type: string
    *     responses:
    *       200:
    *         description: Converted message
    *       400:
    *         description: Bad request
    *       401:
    *         description: Unauthorized
    *       404:
    *         description: Template not found
    */cov_ir7g56url.s[150]++;app.post('/api/convert/:srcDataType/:template(*)',function(req,res){cov_ir7g56url.f[48]++;cov_ir7g56url.s[151]++;workerPool.exec({'type':'/api/convert/:srcDataType/:template','srcData':req.body.toString(),'srcDataType':req.params.srcDataType,'templateName':req.params.template}).then(result=>{cov_ir7g56url.f[49]++;cov_ir7g56url.s[152]++;res.status(result.status);cov_ir7g56url.s[153]++;res.json(result.resultMsg);cov_ir7g56url.s[154]++;return;});});cov_ir7g56url.s[155]++;return app;};