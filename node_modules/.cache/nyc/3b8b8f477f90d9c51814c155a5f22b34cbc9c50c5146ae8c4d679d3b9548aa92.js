var cov_12i52wv87c=function(){var path="/home/lenovo/nodefiles2/FHIR-Converter-master/src/e2e-test/regression-test/util/generate-ground-truths.js";var hash="29553d947bcdc7ec269ea637ad4c101e442c4dbb";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/home/lenovo/nodefiles2/FHIR-Converter-master/src/e2e-test/regression-test/util/generate-ground-truths.js",statementMap:{"0":{start:{line:6,column:14},end:{line:6,column:29}},"1":{start:{line:7,column:11},end:{line:7,column:30}},"2":{start:{line:8,column:14},end:{line:8,column:34}},"3":{start:{line:9,column:19},end:{line:9,column:61}},"4":{start:{line:10,column:14},end:{line:10,column:32}},"5":{start:{line:11,column:18},end:{line:11,column:61}},"6":{start:{line:13,column:20},end:{line:20,column:1}},"7":{start:{line:14,column:20},end:{line:14,column:46}},"8":{start:{line:15,column:22},end:{line:15,column:50}},"9":{start:{line:17,column:21},end:{line:18,column:60}},"10":{start:{line:18,column:8},end:{line:18,column:59}},"11":{start:{line:18,column:31},end:{line:18,column:58}},"12":{start:{line:19,column:4},end:{line:19,column:67}},"13":{start:{line:19,column:47},end:{line:19,column:65}},"14":{start:{line:19,column:63},end:{line:19,column:64}},"15":{start:{line:22,column:23},end:{line:49,column:1}},"16":{start:{line:23,column:29},end:{line:23,column:81}},"17":{start:{line:24,column:25},end:{line:24,column:74}},"18":{start:{line:25,column:20},end:{line:25,column:47}},"19":{start:{line:27,column:4},end:{line:48,column:8}},"20":{start:{line:27,column:35},end:{line:48,column:6}},"21":{start:{line:28,column:32},end:{line:28,column:98}},"22":{start:{line:29,column:28},end:{line:29,column:86}},"23":{start:{line:30,column:32},end:{line:30,column:72}},"24":{start:{line:31,column:8},end:{line:31,column:42}},"25":{start:{line:33,column:24},end:{line:38,column:9}},"26":{start:{line:40,column:8},end:{line:47,column:27}},"27":{start:{line:42,column:33},end:{line:42,column:98}},"28":{start:{line:43,column:16},end:{line:45,column:19}},"29":{start:{line:44,column:20},end:{line:44,column:38}},"30":{start:{line:51,column:13},end:{line:80,column:1}},"31":{start:{line:52,column:19},end:{line:55,column:5}},"32":{start:{line:57,column:4},end:{line:79,column:7}},"33":{start:{line:58,column:8},end:{line:78,column:27}},"34":{start:{line:60,column:16},end:{line:76,column:17}},"35":{start:{line:61,column:20},end:{line:61,column:36}},"36":{start:{line:64,column:39},end:{line:64,column:93}},"37":{start:{line:65,column:39},end:{line:65,column:94}},"38":{start:{line:66,column:40},end:{line:66,column:99}},"39":{start:{line:67,column:42},end:{line:67,column:105}},"40":{start:{line:69,column:44},end:{line:69,column:68}},"41":{start:{line:70,column:46},end:{line:70,column:72}},"42":{start:{line:72,column:20},end:{line:75,column:61}},"43":{start:{line:75,column:39},end:{line:75,column:59}},"44":{start:{line:87,column:0},end:{line:89,column:2}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:13,column:20},end:{line:13,column:21}},loc:{start:{line:13,column:32},end:{line:20,column:1}},line:13},"1":{name:"(anonymous_1)",decl:{start:{line:17,column:46},end:{line:17,column:47}},loc:{start:{line:18,column:8},end:{line:18,column:59}},line:18},"2":{name:"(anonymous_2)",decl:{start:{line:18,column:20},end:{line:18,column:21}},loc:{start:{line:18,column:31},end:{line:18,column:58}},line:18},"3":{name:"(anonymous_3)",decl:{start:{line:19,column:38},end:{line:19,column:39}},loc:{start:{line:19,column:47},end:{line:19,column:65}},line:19},"4":{name:"(anonymous_4)",decl:{start:{line:19,column:58},end:{line:19,column:59}},loc:{start:{line:19,column:63},end:{line:19,column:64}},line:19},"5":{name:"(anonymous_5)",decl:{start:{line:22,column:23},end:{line:22,column:24}},loc:{start:{line:22,column:67},end:{line:49,column:1}},line:22},"6":{name:"(anonymous_6)",decl:{start:{line:27,column:24},end:{line:27,column:25}},loc:{start:{line:27,column:35},end:{line:48,column:6}},line:27},"7":{name:"(anonymous_7)",decl:{start:{line:27,column:47},end:{line:27,column:48}},loc:{start:{line:27,column:68},end:{line:48,column:5}},line:27},"8":{name:"(anonymous_8)",decl:{start:{line:41,column:18},end:{line:41,column:19}},loc:{start:{line:41,column:28},end:{line:46,column:13}},line:41},"9":{name:"(anonymous_9)",decl:{start:{line:43,column:103},end:{line:43,column:104}},loc:{start:{line:43,column:109},end:{line:45,column:17}},line:43},"10":{name:"(anonymous_10)",decl:{start:{line:51,column:13},end:{line:51,column:14}},loc:{start:{line:51,column:25},end:{line:80,column:1}},line:51},"11":{name:"(anonymous_11)",decl:{start:{line:57,column:23},end:{line:57,column:24}},loc:{start:{line:57,column:44},end:{line:79,column:5}},line:57},"12":{name:"(anonymous_12)",decl:{start:{line:59,column:18},end:{line:59,column:19}},loc:{start:{line:59,column:26},end:{line:77,column:13}},line:59},"13":{name:"(anonymous_13)",decl:{start:{line:75,column:33},end:{line:75,column:34}},loc:{start:{line:75,column:39},end:{line:75,column:59}},line:75}},branchMap:{"0":{loc:{start:{line:60,column:16},end:{line:76,column:17}},type:"if",locations:[{start:{line:60,column:16},end:{line:76,column:17}},{start:{line:60,column:16},end:{line:76,column:17}}],line:60}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0},f:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0},b:{"0":[0,0]},_coverageSchema:"43e27e138ebf9cfc5966b082cf9a028302ed4184",hash:"29553d947bcdc7ec269ea637ad4c101e442c4dbb"};var coverage=global[gcv]||(global[gcv]={});if(coverage[path]&&coverage[path].hash===hash){return coverage[path];}return coverage[path]=coverageData;}();// -------------------------------------------------------------------------------------------------
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License (MIT). See LICENSE in the repo root for license information.
// -------------------------------------------------------------------------------------------------
const path=(cov_12i52wv87c.s[0]++,require('path'));const fs=(cov_12i52wv87c.s[1]++,require('fs-extra'));const cases=(cov_12i52wv87c.s[2]++,require('../config'));const WorkerPool=(cov_12i52wv87c.s[3]++,require('../../../lib/workers/workerPool'));const utils=(cov_12i52wv87c.s[4]++,require('./utils'));const constants=(cov_12i52wv87c.s[5]++,require('../../../lib/constants/constants'));cov_12i52wv87c.s[6]++;const truthsExist=basePath=>{cov_12i52wv87c.f[0]++;const cdaPath=(cov_12i52wv87c.s[7]++,path.join(basePath,'cda'));const hl7v2Path=(cov_12i52wv87c.s[8]++,path.join(basePath,'hl7v2'));const promises=(cov_12i52wv87c.s[9]++,[cdaPath,hl7v2Path].map(subPath=>{cov_12i52wv87c.f[1]++;cov_12i52wv87c.s[10]++;return new Promise(fulfill=>{cov_12i52wv87c.f[2]++;cov_12i52wv87c.s[11]++;return fs.exists(subPath,fulfill);});}));cov_12i52wv87c.s[12]++;return Promise.all(promises).then(flags=>{cov_12i52wv87c.f[3]++;cov_12i52wv87c.s[13]++;return flags.some(x=>{cov_12i52wv87c.f[4]++;cov_12i52wv87c.s[14]++;return x;});});};cov_12i52wv87c.s[15]++;const generateTruths=(workerPool,basePath,domain,subCases)=>{cov_12i52wv87c.f[5]++;const templateBasePath=(cov_12i52wv87c.s[16]++,path.join(constants.TEMPLATE_FILES_LOCATION,domain));const dataBasePath=(cov_12i52wv87c.s[17]++,path.join(constants.SAMPLE_DATA_LOCATION,domain));const subPath=(cov_12i52wv87c.s[18]++,path.join(basePath,domain));cov_12i52wv87c.s[19]++;return subCases.map(subCase=>{cov_12i52wv87c.f[6]++;cov_12i52wv87c.s[20]++;return new Promise((fulfill,reject)=>{cov_12i52wv87c.f[7]++;const templateContent=(cov_12i52wv87c.s[21]++,fs.readFileSync(path.join(templateBasePath,subCase.templateFile)));const dataContent=(cov_12i52wv87c.s[22]++,fs.readFileSync(path.join(dataBasePath,subCase.dataFile)));const subTemplatePath=(cov_12i52wv87c.s[23]++,path.join(subPath,subCase.templateFile));cov_12i52wv87c.s[24]++;fs.ensureDirSync(subTemplatePath);const payload=(cov_12i52wv87c.s[25]++,{type:`/api/convert/:srcDataType`,srcDataType:domain,templateBase64:Buffer.from(templateContent).toString('base64'),srcDataBase64:Buffer.from(dataContent).toString('base64')});cov_12i52wv87c.s[26]++;workerPool.exec(payload).then(result=>{cov_12i52wv87c.f[8]++;const filePath=(cov_12i52wv87c.s[27]++,path.join(subTemplatePath,utils.getGroundTruthFileName(subCase)));cov_12i52wv87c.s[28]++;fs.writeFile(filePath,JSON.stringify(result.resultMsg.fhirResource,null,4),'UTF8',()=>{cov_12i52wv87c.f[9]++;cov_12i52wv87c.s[29]++;fulfill(filePath);});}).catch(reject);});});};cov_12i52wv87c.s[30]++;const main=basePath=>{cov_12i52wv87c.f[10]++;const prompt=(cov_12i52wv87c.s[31]++,`
        The truths files are already exist in ${basePath}. 
        Please remove them manually for the normal operation of the program.
    `);cov_12i52wv87c.s[32]++;return new Promise((fulfill,reject)=>{cov_12i52wv87c.f[11]++;cov_12i52wv87c.s[33]++;truthsExist(basePath).then(flag=>{cov_12i52wv87c.f[12]++;cov_12i52wv87c.s[34]++;if(flag){cov_12i52wv87c.b[0][0]++;cov_12i52wv87c.s[35]++;fulfill(prompt);}else{cov_12i52wv87c.b[0][1]++;const workerPath=(cov_12i52wv87c.s[36]++,path.join(__dirname,'../../../lib/workers/worker.js'));const workerPool=(cov_12i52wv87c.s[37]++,new WorkerPool(workerPath,require('os').cpus().length));const cdaPromises=(cov_12i52wv87c.s[38]++,generateTruths(workerPool,basePath,'cda',cases.cdaCases));const hl7v2Promises=(cov_12i52wv87c.s[39]++,generateTruths(workerPool,basePath,'hl7v2',cases.hl7v2Cases));const cdaFinalPromise=(cov_12i52wv87c.s[40]++,Promise.all(cdaPromises));const hl7v2FinalPromise=(cov_12i52wv87c.s[41]++,Promise.all(hl7v2Promises));cov_12i52wv87c.s[42]++;return Promise.all([cdaFinalPromise,hl7v2FinalPromise]).then(fulfill).catch(reject).finally(()=>{cov_12i52wv87c.f[13]++;cov_12i52wv87c.s[43]++;return workerPool.destroy();});}}).catch(reject);});};// Be very careful before invoking `main` function and make sure that you indeed want
// to generate new ground truths.
// You can generate ground truth files in command line by requiring `main` function.
cov_12i52wv87c.s[44]++;module.exports={generate:main};